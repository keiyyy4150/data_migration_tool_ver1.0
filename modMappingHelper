Option Explicit

'==============================
' Mapping をテーブル名（ListObject）で読み込む
' ヘッダ：No / 出力カラム名 / 型 / ロジック / キー / モード / 定義 / （H列以降=テーブル名）
'==============================
Public Function ReadMappingFromTableName(mapTableName As String) As Boolean
    On Error GoTo FAIL
    
    Dim lo As ListObject
    Set lo = GetListObjectByName(mapTableName)
    If lo Is Nothing Then
        MsgBox "Mappingテーブルが見つかりません: " & mapTableName, vbCritical
        ReadMappingFromTableName = False: Exit Function
    End If
    
    Dim hdr As Range, body As Range
    Set hdr = lo.HeaderRowRange
    If lo.ListRows.Count = 0 Then
        MsgBox "Mappingテーブルに行がありません。", vbCritical
        ReadMappingFromTableName = False: Exit Function
    End If
    Set body = lo.DataBodyRange
    
    Dim lastRow As Long: lastRow = lo.ListRows.Count
    Dim lastCol As Long: lastCol = lo.ListColumns.Count
    
    ' A〜G 固定
    ReDim Map_OutCols(1 To lastRow)
    ReDim Map_DataType(1 To lastRow)
    ReDim Map_Logic(1 To lastRow)
    ReDim Map_IsKey(1 To lastRow)
    ReDim Map_Mode(1 To lastRow)
    ReDim Map_Def(1 To lastRow)
    
    Dim r As Long
    For r = 1 To lastRow
        Map_OutCols(r)  = CStr(body.Cells(r, 2).Value) ' 出力カラム名
        Map_DataType(r) = UCase$(Trim$(CStr(body.Cells(r, 3).Value))) ' 型
        Map_Logic(r)    = CStr(body.Cells(r, 4).Value) ' ロジック
        Map_IsKey(r)    = (CStr(body.Cells(r, 5).Value) = "○") ' キー
        Map_Mode(r)     = UCase$(Trim$(CStr(body.Cells(r, 6).Value))) ' モード
        If Len(Map_Mode(r)) = 0 Then Map_Mode(r) = "VALUE"
        Map_Def(r)      = CStr(body.Cells(r, 7).Value) ' 定義
    Next
    
    ' H列以降：テーブル名（1行目ヘッダ）
    Dim tCount As Long: tCount = Application.Max(0, lastCol - 7)
    If tCount > 0 Then
        ReDim Map_TblNames(0 To tCount - 1)
        Dim j As Long
        For j = 8 To lastCol
            Map_TblNames(j - 8) = CStr(hdr.Cells(1, j).Value)
        Next
        
        ' 元カラム
        ReDim Map_SrcCols(1 To lastRow, 0 To tCount - 1)
        For r = 1 To lastRow
            For j = 0 To tCount - 1
                Map_SrcCols(r, j) = CStr(body.Cells(r, 8 + j).Value)
            Next
        Next
    Else
        ReDim Map_TblNames(0 To -1) ' 空
        ReDim Map_SrcCols(1 To 1, 0 To 0) ' ダミー
    End If
    
    ReadMappingFromTableName = True
    Exit Function
FAIL:
    ReadMappingFromTableName = False
End Function

'==============================
' キー索引（Single: 1件、Multi: 複数行）
'==============================
Public Sub BuildKeyIndexes()
    Set KeyIndexSingle = CreateObject("Scripting.Dictionary")
    Set KeyIndexMulti  = CreateObject("Scripting.Dictionary")
    
    Dim t As Long
    If (Not Not Map_TblNames) = 0 Then Exit Sub
    
    For t = LBound(Map_TblNames) To UBound(Map_TblNames)
        Dim arr As Variant: arr = TableData(Map_TblNames(t))
        Dim keyColIdx() As Long, kc As Long: kc = 0
        
        ' このテーブルでキーに使う列（Mapping の「○」が立っていて、かつ元列名が指定されている列）を集める
        Dim i As Long
        For i = LBound(Map_IsKey) To UBound(Map_IsKey)
            If Map_IsKey(i) Then
                If UBound(Map_SrcCols, 2) >= t Then
                    If Len(Map_SrcCols(i, t)) > 0 Then
                        kc = kc + 1
                        ReDim Preserve keyColIdx(1 To kc)
                        keyColIdx(kc) = FindColumnIndex(arr, Map_SrcCols(i, t))
                    End If
                End If
            End If
        Next
        
        Dim dict1 As Object, dictM As Object
        Set dict1 = CreateObject("Scripting.Dictionary")
        Set dictM = CreateObject("Scripting.Dictionary")
        
        If kc > 0 Then
            Dim r As Long, keyStr As String
            For r = 2 To UBound(arr, 1)
                keyStr = BuildKeyFromRow(arr, r, keyColIdx)
                If Len(keyStr) > 0 Then
                    ' Single: まだ無ければ登録
                    If Not dict1.Exists(keyStr) Then dict1.Add keyStr, r
                    ' Multi: 常にCollectionに追加
                    If Not dictM.Exists(keyStr) Then dictM.Add keyStr, New Collection
                    dictM(keyStr).Add r
                End If
            Next
        End If
        
        KeyIndexSingle(Map_TblNames(t)) = dict1
        KeyIndexMulti(Map_TblNames(t))  = dictM
    Next
End Sub