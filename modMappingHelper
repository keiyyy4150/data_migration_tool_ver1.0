Option Explicit

'==============================
' Mapping をテーブル名（ListObject）で読み込む
' ヘッダ：No / 出力カラム名 / 型 / ロジック / キー / モード / 定義 / （H列以降=テーブル名）
'==============================
Public Function ReadMappingFromTableName(mapTableName As String) As Boolean
    On Error GoTo FAIL
    
    Dim lo As ListObject
    Set lo = GetListObjectByName(mapTableName)
    If lo Is Nothing Then
        MsgBox "Mappingテーブルが見つかりません: " & mapTableName, vbCritical
        ReadMappingFromTableName = False: Exit Function
    End If
    
    Dim hdr As Range, body As Range
    Set hdr = lo.HeaderRowRange
    If lo.ListRows.Count = 0 Then
        MsgBox "Mappingテーブルに行がありません。", vbCritical
        ReadMappingFromTableName = False: Exit Function
    End If
    Set body = lo.DataBodyRange
    
    Dim lastRow As Long: lastRow = lo.ListRows.Count
    Dim lastCol As Long: lastCol = lo.ListColumns.Count
    
    ' A?G 固定
    ReDim Map_OutCols(1 To lastRow)
    ReDim Map_DataType(1 To lastRow)
    ReDim Map_Logic(1 To lastRow)
    ReDim Map_IsKey(1 To lastRow)
    ReDim Map_Mode(1 To lastRow)
    ReDim Map_Def(1 To lastRow)
    
    Dim r As Long
    For r = 1 To lastRow
        Map_OutCols(r) = CStr(body.Cells(r, 2).Value)  ' 出力カラム名
        Map_DataType(r) = UCase$(Trim$(CStr(body.Cells(r, 3).Value))) ' 型
        Map_Logic(r) = CStr(body.Cells(r, 4).Value)    ' ロジック
        Map_IsKey(r) = (CStr(body.Cells(r, 5).Value) = "○")    ' キー
        Map_Mode(r) = UCase$(Trim$(CStr(body.Cells(r, 6).Value)))     ' モード
        If Len(Map_Mode(r)) = 0 Then Map_Mode(r) = "VALUE"
        Map_Def(r) = CStr(body.Cells(r, 7).Value)      ' 定義
    Next
    
    ' H列以降：テーブル名（1行目ヘッダ）
    Dim tCount As Long: tCount = Application.Max(0, lastCol - 7)
    If tCount > 0 Then
        ReDim Map_TblNames(0 To tCount - 1)
        Dim j As Long
        For j = 8 To lastCol
            Map_TblNames(j - 8) = CStr(hdr.Cells(1, j).Value)
        Next
        
        ' 元カラム
        ReDim Map_SrcCols(1 To lastRow, 0 To tCount - 1)
        For r = 1 To lastRow
            For j = 0 To tCount - 1
                Map_SrcCols(r, j) = CStr(body.Cells(r, 8 + j).Value)
            Next
        Next
    Else
        ReDim Map_TblNames(0 To -1) ' 空
        ReDim Map_SrcCols(1 To 1, 0 To 0) ' ダミー
    End If
    
    ReadMappingFromTableName = True
    Exit Function
FAIL:
    ReadMappingFromTableName = False
End Function

'==============================
' キー索引（Single: 1件、Multi: 複数行）堅牢版
'==============================
Public Sub BuildKeyIndexes()
    ' 親辞書（テーブル名 -> 単一行辞書 / 複数行辞書）を初期化
    Set KeyIndexSingle = CreateObject("Scripting.Dictionary")
    Set KeyIndexMulti = CreateObject("Scripting.Dictionary")
    
    Dim t As Long
    If (Not Not Map_TblNames) = 0 Then Exit Sub ' テーブル名未定義なら何もしない
    
    For t = LBound(Map_TblNames) To UBound(Map_TblNames)
        Dim tblName As String: tblName = Map_TblNames(t)
        Dim arr As Variant
        
        ' 1) テーブルが読み込まれているか？
        If Not TableData.Exists(tblName) Then
            WriteLog "ERROR", "BuildKeyIndexes: table not loaded: " & tblName
            ' 空の辞書でも入れておく
            KeyIndexSingle(tblName) = CreateObject("Scripting.Dictionary")
            KeyIndexMulti(tblName) = CreateObject("Scripting.Dictionary")
            GoTo CONT_T
        End If
        
        arr = TableData(tblName)
        ' 2) 配列で、かつ2次元か？
        If Not IsArray(arr) Then
            WriteLog "ERROR", "BuildKeyIndexes: table is not array: " & tblName
            KeyIndexSingle(tblName) = CreateObject("Scripting.Dictionary")
            KeyIndexMulti(tblName) = CreateObject("Scripting.Dictionary")
            GoTo CONT_T
        End If
        On Error GoTo BAD_ARRAY
        Dim rUB1 As Long, rUB2 As Long
        rUB1 = UBound(arr, 1): rUB2 = UBound(arr, 2)
        On Error GoTo 0
        If rUB1 < 2 Or rUB2 < 1 Then
            WriteLog "ERROR", "BuildKeyIndexes: invalid array shape: " & tblName
            KeyIndexSingle(tblName) = CreateObject("Scripting.Dictionary")
            KeyIndexMulti(tblName) = CreateObject("Scripting.Dictionary")
            GoTo CONT_T
        End If
        
        ' 3) このテーブルで使うキー列ヘッダーの位置を集める
        Dim keyColIdx() As Long, kc As Long: kc = 0
        ' Noの数だけ見る
        Dim i As Long
        For i = LBound(Map_IsKey) To UBound(Map_IsKey)
            If Map_IsKey(i) Then
                If UBound(Map_SrcCols, 2) >= t Then
                    Dim srcCol As String: srcCol = Trim$(CStr(Map_SrcCols(i, t)))
                    If Len(srcCol) > 0 Then
                        Dim idx As Long: idx = FindColumnIndex(arr, srcCol)
                        If idx > 0 Then
                            kc = kc + 1
                            ReDim Preserve keyColIdx(1 To kc)
                            keyColIdx(kc) = idx
                        Else
                            WriteLog "WARN", "BuildKeyIndexes: key column not found. table=" & tblName & " col=" & srcCol
                        End If
                    End If
                End If
            End If
        Next i
        
        Dim dict1 As Object, dictM As Object
        Set dict1 = CreateObject("Scripting.Dictionary") ' 単一行（最初の1件）
        Set dictM = CreateObject("Scripting.Dictionary") ' 複数行（全件、Collection）
        
        ' 4) 実際にキーを作る
        If kc > 0 Then
            Dim r As Long, keyStr As String
            For r = 2 To rUB1
                keyStr = BuildKeyFromRow(arr, r, keyColIdx)
                If Len(keyStr) > 0 Then
                    If Not dict1.Exists(keyStr) Then dict1.Add keyStr, r
                    If Not dictM.Exists(keyStr) Then dictM.Add keyStr, New Collection
                    dictM(keyStr).Add r
                End If
            Next
        Else
            WriteLog "WARN", "BuildKeyIndexes: no key columns collected for table=" & tblName
        End If
        
        Set KeyIndexSingle(tblName) = dict1
        Set KeyIndexMulti(tblName) = dictM
        
CONT_T:
        ' 次のテーブルへ
    Next
    Exit Sub

BAD_ARRAY:
    On Error GoTo 0
    WriteLog "ERROR", "BuildKeyIndexes: UBound failed (not 2D array?) table=" & Map_TblNames(t)
    KeyIndexSingle(Map_TblNames(t)) = CreateObject("Scripting.Dictionary")
    KeyIndexMulti(Map_TblNames(t)) = CreateObject("Scripting.Dictionary")
End Sub


Private Function Norm(ByVal s As String) As String
    If Len(s) = 0 Then Norm = "" : Exit Function
    s = Replace$(s, ChrW(&HFEFF), "") ' UTF-8 BOM
    s = Trim$(s)
    Norm = s
End Function

Public Function FindColumnIndex(arr As Variant, colName As String) As Long
    Dim c As Long, target As String
    target = Norm(colName)
    For c = 1 To UBound(arr, 2)
        If Norm(CStr(arr(1, c))) = target Then
            FindColumnIndex = c
            Exit Function
        End If
    Next
    FindColumnIndex = 0
End Function
